{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bugat\\\\Documents\\\\Personal Coding Projects\\\\React-Force-Graph-Test\\\\src\\\\App.js\";\nimport React from \"react\";\nimport ForceGraph2D from \"react-force-graph-2d\";\nimport genRandomTree from \"./random_data\"; // import image1 from \"./Pictures/\"\n// const test = require('./Pictures/')\n// const imgs = [\n//   {src: './Pictures/img1', title: 'img1'},\n//   {src: './Pictures/img2', title: 'img2'},\n//   {src: './Pictures/img3', title: 'img3'},\n//   {src: './Pictures/img4', title: 'img4'},\n//   {src: './Pictures/img5', title: 'img5'},\n//   {src: './Pictures/img6', title: 'img6'}\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imgs = [{\n  src: './Pictures/img3.png',\n  title: 'img3'\n}, {\n  src: './Pictures/img4.png',\n  title: 'img4'\n}, {\n  src: './Pictures/img5.png',\n  title: 'img5'\n}, {\n  src: './Pictures/img6.png',\n  title: 'img6'\n}, {\n  src: './Pictures/img7.png',\n  title: 'img7'\n}];\nconst iData = {\n  nodes: imgs.map((img, id) => ({\n    id,\n    img\n  })),\n  links: [...Array(imgs.length).keys()].filter(id => id).map(id => ({\n    source: id,\n    target: Math.round(Math.random() * (id - 1))\n  }))\n}; // gen a number persistent color from around the palette\n// const getColor = (n) =>\n//   \"#\" + ((n * 1234567) % Math.pow(2, 24)).toString(16).padStart(6, \"0\");\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n      graphData: iData,\n      nodeCanvasObject: (node, ctx, global) => {\n        console.log(node);\n        const size = 12;\n        const nodeImg = new Image();\n        nodeImg.src = node.img;\n        ctx.drawImage(nodeImg, node.x - size / 2, node.y - size / 2, size, size);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ForceGraph2D","genRandomTree","imgs","src","title","iData","nodes","map","img","id","links","Array","length","keys","filter","source","target","Math","round","random","App","node","ctx","global","console","log","size","nodeImg","Image","drawImage","x","y"],"sources":["C:/Users/bugat/Documents/Personal Coding Projects/React-Force-Graph-Test/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport ForceGraph2D from \"react-force-graph-2d\";\r\nimport genRandomTree from \"./random_data\";\r\n// import image1 from \"./Pictures/\"\r\n\r\n// const test = require('./Pictures/')\r\n\r\n// const imgs = [\r\n//   {src: './Pictures/img1', title: 'img1'},\r\n//   {src: './Pictures/img2', title: 'img2'},\r\n//   {src: './Pictures/img3', title: 'img3'},\r\n//   {src: './Pictures/img4', title: 'img4'},\r\n//   {src: './Pictures/img5', title: 'img5'},\r\n//   {src: './Pictures/img6', title: 'img6'}\r\n// ];\r\n\r\nconst imgs = [\r\n  {src: './Pictures/img3.png', title: 'img3'},\r\n  {src: './Pictures/img4.png', title: 'img4'},\r\n  {src: './Pictures/img5.png', title: 'img5'},\r\n  {src: './Pictures/img6.png', title: 'img6'},\r\n  {src: './Pictures/img7.png', title: 'img7'}\r\n];\r\n\r\nconst iData = {\r\n  nodes: imgs.map((img, id) => ({ id, img })),\r\n  links: [...Array(imgs.length).keys()]\r\n    .filter(id => id)\r\n      .map(id => ({\r\n        source: id,\r\n        target: Math.round(Math.random() * (id-1))\r\n      }))\r\n};\r\n\r\n\r\n// gen a number persistent color from around the palette\r\n// const getColor = (n) =>\r\n//   \"#\" + ((n * 1234567) % Math.pow(2, 24)).toString(16).padStart(6, \"0\");\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <ForceGraph2D\r\n       graphData={iData}\r\n       nodeCanvasObject = {(node, ctx, global) => {\r\n        console.log(node);\r\n          const size = 12;\r\n          const nodeImg = new Image();\r\n          nodeImg.src = node.img;\r\n          ctx.drawImage(nodeImg, node.x - size/2, node.y - size/2, size, size);\r\n       }} \r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,aAAP,MAA0B,eAA1B,C,CACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,IAAI,GAAG,CACX;EAACC,GAAG,EAAE,qBAAN;EAA6BC,KAAK,EAAE;AAApC,CADW,EAEX;EAACD,GAAG,EAAE,qBAAN;EAA6BC,KAAK,EAAE;AAApC,CAFW,EAGX;EAACD,GAAG,EAAE,qBAAN;EAA6BC,KAAK,EAAE;AAApC,CAHW,EAIX;EAACD,GAAG,EAAE,qBAAN;EAA6BC,KAAK,EAAE;AAApC,CAJW,EAKX;EAACD,GAAG,EAAE,qBAAN;EAA6BC,KAAK,EAAE;AAApC,CALW,CAAb;AAQA,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAEJ,IAAI,CAACK,GAAL,CAAS,CAACC,GAAD,EAAMC,EAAN,MAAc;IAAEA,EAAF;IAAMD;EAAN,CAAd,CAAT,CADK;EAEZE,KAAK,EAAE,CAAC,GAAGC,KAAK,CAACT,IAAI,CAACU,MAAN,CAAL,CAAmBC,IAAnB,EAAJ,EACJC,MADI,CACGL,EAAE,IAAIA,EADT,EAEFF,GAFE,CAEEE,EAAE,KAAK;IACVM,MAAM,EAAEN,EADE;IAEVO,MAAM,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBV,EAAE,GAAC,CAApB,CAAX;EAFE,CAAL,CAFJ;AAFK,CAAd,C,CAWA;AACA;AACA;;AAEA,SAASW,GAAT,GAAe;EACb,oBACE;IAAA,uBACE,QAAC,YAAD;MACC,SAAS,EAAEf,KADZ;MAEC,gBAAgB,EAAI,CAACgB,IAAD,EAAOC,GAAP,EAAYC,MAAZ,KAAuB;QAC1CC,OAAO,CAACC,GAAR,CAAYJ,IAAZ;QACE,MAAMK,IAAI,GAAG,EAAb;QACA,MAAMC,OAAO,GAAG,IAAIC,KAAJ,EAAhB;QACAD,OAAO,CAACxB,GAAR,GAAckB,IAAI,CAACb,GAAnB;QACAc,GAAG,CAACO,SAAJ,CAAcF,OAAd,EAAuBN,IAAI,CAACS,CAAL,GAASJ,IAAI,GAAC,CAArC,EAAwCL,IAAI,CAACU,CAAL,GAASL,IAAI,GAAC,CAAtD,EAAyDA,IAAzD,EAA+DA,IAA/D;MACF;IARF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;KAfQN,G;AAiBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}