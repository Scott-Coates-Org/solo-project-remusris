{"ast":null,"code":"var _jsxFileName = \"/Users/remusrisnov/Development/react-force-graph/src/App.js\";\nimport React from \"react\";\nimport ForceGraph2D from \"react-force-graph-2d\";\nimport genRandomTree from \"./random_data\"; // import image1 from \"./Pictures/\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst test = require('./Pictures/');\n\nconst imgs = [{\n  src: './Pictures/decoupled content from structure',\n  title: 'image1'\n}, {\n  src: './Pictures/knowledge management combined with content discovery',\n  title: 'image2'\n}];\nconst iData = {\n  nodes: imgs.map((img, id) => ({\n    id,\n    img\n  })),\n  links: [...Array(imgs.length).keys()].filter(id => id).map(id => ({\n    source: id,\n    target: Math.round(Math.random() * (id - 1))\n  }))\n}; // gen a number persistent color from around the palette\n// const getColor = (n) =>\n//   \"#\" + ((n * 1234567) % Math.pow(2, 24)).toString(16).padStart(6, \"0\");\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ForceGraph2D, {\n      graphData: iData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ForceGraph2D","genRandomTree","test","require","imgs","src","title","iData","nodes","map","img","id","links","Array","length","keys","filter","source","target","Math","round","random","App"],"sources":["/Users/remusrisnov/Development/react-force-graph/src/App.js"],"sourcesContent":["import React from \"react\";\nimport ForceGraph2D from \"react-force-graph-2d\";\nimport genRandomTree from \"./random_data\";\n// import image1 from \"./Pictures/\"\n\nconst test = require('./Pictures/')\n\nconst imgs = [\n  {src: './Pictures/decoupled content from structure', title: 'image1'},\n  {src: './Pictures/knowledge management combined with content discovery', title: 'image2'}\n];\n\nconst iData = {\n  nodes: imgs.map((img, id) => ({ id, img })),\n  links: [...Array(imgs.length).keys()]\n    .filter(id => id)\n      .map(id => ({\n        source: id,\n        target: Math.round(Math.random() * (id-1))\n      }))\n};\n\n\n// gen a number persistent color from around the palette\n// const getColor = (n) =>\n//   \"#\" + ((n * 1234567) % Math.pow(2, 24)).toString(16).padStart(6, \"0\");\n\nfunction App() {\n  return (\n    <div>\n      <ForceGraph2D graphData={iData} />\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,aAAP,MAA0B,eAA1B,C,CACA;;;;AAEA,MAAMC,IAAI,GAAGC,OAAO,CAAC,aAAD,CAApB;;AAEA,MAAMC,IAAI,GAAG,CACX;EAACC,GAAG,EAAE,6CAAN;EAAqDC,KAAK,EAAE;AAA5D,CADW,EAEX;EAACD,GAAG,EAAE,iEAAN;EAAyEC,KAAK,EAAE;AAAhF,CAFW,CAAb;AAKA,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAEJ,IAAI,CAACK,GAAL,CAAS,CAACC,GAAD,EAAMC,EAAN,MAAc;IAAEA,EAAF;IAAMD;EAAN,CAAd,CAAT,CADK;EAEZE,KAAK,EAAE,CAAC,GAAGC,KAAK,CAACT,IAAI,CAACU,MAAN,CAAL,CAAmBC,IAAnB,EAAJ,EACJC,MADI,CACGL,EAAE,IAAIA,EADT,EAEFF,GAFE,CAEEE,EAAE,KAAK;IACVM,MAAM,EAAEN,EADE;IAEVO,MAAM,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBV,EAAE,GAAC,CAApB,CAAX;EAFE,CAAL,CAFJ;AAFK,CAAd,C,CAWA;AACA;AACA;;AAEA,SAASW,GAAT,GAAe;EACb,oBACE;IAAA,uBACE,QAAC,YAAD;MAAc,SAAS,EAAEf;IAAzB;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;KANQe,G;AAQT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}