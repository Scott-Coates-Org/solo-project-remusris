{"ast":null,"code":"function genRandomTree() {\n  let N = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 300;\n  let reverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return {\n    nodes: [...Array(N).keys()].map(i => ({\n      id: i\n    })),\n    links: [...Array(N).keys()].filter(id => id).map(id => ({\n      [reverse ? \"target\" : \"source\"]: id,\n      [reverse ? \"source\" : \"target\"]: Math.round(Math.random() * (id - 1))\n    }))\n  };\n}\n\nexport default genRandomTree;","map":{"version":3,"names":["genRandomTree","N","reverse","nodes","Array","keys","map","i","id","links","filter","Math","round","random"],"sources":["C:/Users/bugat/Documents/Personal Coding Projects/React-Force-Graph-Test/src/random_data.js"],"sourcesContent":["function genRandomTree(N = 300, reverse = false) {\r\n    return {\r\n      nodes: [...Array(N).keys()].map((i) => ({ id: i })),\r\n      links: [...Array(N).keys()]\r\n        .filter((id) => id)\r\n        .map((id) => ({\r\n          [reverse ? \"target\" : \"source\"]: id,\r\n          [reverse ? \"source\" : \"target\"]: Math.round(Math.random() * (id - 1))\r\n        }))\r\n    };\r\n  }\r\n  \r\n  export default genRandomTree;\r\n  "],"mappings":"AAAA,SAASA,aAAT,GAAiD;EAAA,IAA1BC,CAA0B,uEAAtB,GAAsB;EAAA,IAAjBC,OAAiB,uEAAP,KAAO;EAC7C,OAAO;IACLC,KAAK,EAAE,CAAC,GAAGC,KAAK,CAACH,CAAD,CAAL,CAASI,IAAT,EAAJ,EAAqBC,GAArB,CAA0BC,CAAD,KAAQ;MAAEC,EAAE,EAAED;IAAN,CAAR,CAAzB,CADF;IAELE,KAAK,EAAE,CAAC,GAAGL,KAAK,CAACH,CAAD,CAAL,CAASI,IAAT,EAAJ,EACJK,MADI,CACIF,EAAD,IAAQA,EADX,EAEJF,GAFI,CAECE,EAAD,KAAS;MACZ,CAACN,OAAO,GAAG,QAAH,GAAc,QAAtB,GAAiCM,EADrB;MAEZ,CAACN,OAAO,GAAG,QAAH,GAAc,QAAtB,GAAiCS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,EAAE,GAAG,CAAtB,CAAX;IAFrB,CAAT,CAFA;EAFF,CAAP;AASD;;AAED,eAAeR,aAAf"},"metadata":{},"sourceType":"module"}